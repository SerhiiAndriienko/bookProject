{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/header/header.js","node_modules/@parcel/runtime-js/lib/runtime-4ead0bdc8eea8f0d.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","src/js/loader/loader.js","src/js/sing-up/sing-up.js","src/js/support-ukraine/support-ukraine.js","src/js/support-ukraine/funds-array.js","node_modules/@parcel/runtime-js/lib/runtime-4fdba6fb261c5e45.js","node_modules/@parcel/runtime-js/lib/runtime-9fb572cff567c8af.js","node_modules/@parcel/runtime-js/lib/runtime-2a6ae39a52f02c9a.js","node_modules/@parcel/runtime-js/lib/runtime-4675617ece502dc6.js","node_modules/@parcel/runtime-js/lib/runtime-717ae8753628e991.js","node_modules/@parcel/runtime-js/lib/runtime-294b23a9fa6849aa.js","node_modules/@parcel/runtime-js/lib/runtime-d3ad358644d5f2b7.js","node_modules/@parcel/runtime-js/lib/runtime-4b1240f35f1ef2f7.js","node_modules/@parcel/runtime-js/lib/runtime-552db726a7448408.js","node_modules/@parcel/runtime-js/lib/runtime-7a18546430af897b.js","node_modules/@parcel/runtime-js/lib/runtime-e82f30d856c7427d.js","node_modules/@parcel/runtime-js/lib/runtime-0d940a7498f29064.js","node_modules/@parcel/runtime-js/lib/runtime-4231972f54711fcb.js","node_modules/@parcel/runtime-js/lib/runtime-656c6ab62d87419d.js","node_modules/@parcel/runtime-js/lib/runtime-64a79cc1165d71cc.js","node_modules/@parcel/runtime-js/lib/runtime-702ff7eee4dc1d0b.js","node_modules/@parcel/runtime-js/lib/runtime-0f1223b535024234.js","node_modules/@parcel/runtime-js/lib/runtime-6b31d67655bcf1e4.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","node_modules/@parcel/runtime-js/lib/runtime-74a2b7bb614b636b.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import openCloseIcon from '../../images/icons.svg';\n\n//   Light/dark theme switcher\nexport const bodyRef = document.body;\nconst header = document.querySelector('.page-nav');\nconst iconMobileMenu = document.querySelector('.menu-toggle');\nconst darkModeLocalStored = localStorage.getItem('darkMode');\nconst darkModeId = 'darkMode';\nlet slider = document.querySelector('.switch');\n\nslider.addEventListener('change', changeDarkMode);\nwindow.addEventListener('storage', syncChangeDarkMode);\n\nif (darkModeLocalStored === 'true') {\n  slider.checked = true;\n  slider.setAttribute('checked', '');\n  setDarkModeStyle();\n}\n\nfunction changeDarkMode() {\n  if (slider.checked) {\n    setDarkModeStyle();\n    try {\n      localStorage.setItem(darkModeId, 'true');\n    } catch (error) {\n      console.error('Set state error: ', error.message);\n    }\n  } else {\n    setLightModeStyle();\n    try {\n      localStorage.setItem(darkModeId, 'false');\n    } catch (error) {\n      console.error('Set state error: ', error.message);\n    }\n  }\n}\n\nfunction syncChangeDarkMode(e) {\n  // console.log(e);\n  // console.log('slider.checked', slider.checked);\n  // console.log('e.newValue', e.newValue);\n\n  if (e.newValue === 'true') {\n    slider.checked = true;\n    slider.setAttribute('checked', '');\n    setDarkModeStyle();\n  }\n  if (e.newValue === 'false') {\n    slider.checked = false;\n    slider.removeAttribute('checked');\n    setLightModeStyle();\n  }\n}\n\nfunction setLightModeStyle() {\n  bodyRef.classList.remove('dark-mode');\n  header.classList.remove('dark-mode');\n  iconMobileMenu.classList.remove('dark-mode');\n}\n\nfunction setDarkModeStyle() {\n  bodyRef.classList.add('dark-mode');\n  header.classList.add('dark-mode');\n  iconMobileMenu.classList.add('dark-mode');\n}\n\n// Opening/closing a mod for the mobile version\n\nconst modalBoxEl = document.querySelector('.data-modal');\nconst openModalBtnEl = document.querySelector('.js-open-menu');\nconst openModalBtnSvgEl = document.querySelector('.icon-burger');\nconst signUpBtnMobile = document.querySelector('.sign-up-btn-js');\nconst booksImg = document.querySelector('.modal__books-list');\nconst iconHrefEl = document.querySelector('.icon-href');\n\nopenModalBtnEl.addEventListener('click', toggleModal);\nsignUpBtnMobile.addEventListener('click', toggleModal);\n\nfunction openModalTransition() {\n  modalBoxEl.style.right = '0';\n  booksImg.style.scale = '1.2';\n}\n\nfunction closeModalTransition() {\n  modalBoxEl.style.right = '-100%';\n  booksImg.style.scale = '1';\n}\n\nfunction toggleModal(e) {\n  if (modalBoxEl.classList.contains('is-hidden')) {\n    modalBoxEl.classList.remove('is-hidden');\n    setTimeout(openModalTransition, 0);\n    bodyRef.classList.add('no-scroll-body-js');\n    iconHrefEl.setAttribute('href', `${openCloseIcon}#icon-cross`);\n    document.body.classList.add('modal-open');\n    openModalBtnSvgEl.style.width = '18px';\n    openModalBtnSvgEl.style.height = '18px';\n    return;\n  } else {\n    if (e.target === signUpBtnMobile) {\n      modalBoxEl.classList.add('is-hidden');\n    } else {\n      setTimeout(function () {\n        modalBoxEl.classList.add('is-hidden');\n      }, 250);\n    }\n\n    setTimeout(closeModalTransition, 0);\n    bodyRef.classList.remove('no-scroll-body-js');\n    iconHrefEl.setAttribute('href', `${openCloseIcon}#icon-menu`);\n    document.body.classList.remove('modal-open');\n    openModalBtnSvgEl.style.width = '24px';\n    openModalBtnSvgEl.style.height = '24px';\n  }\n}\n\n// Highlighting the name of the current page in yellow, as well as making disabled the current page 'button' (menu in the header)\n\nconst menuHomeEl = document.querySelector('.menu__home');\nconst menuShoppingEl = document.querySelector('.menu__shopping');\nconst disabledClass = 'disabled';\n\nconst setCurrentPage = () => {\n  const currentPageName = window.location.pathname;\n  console.log(currentPageName);\n\n  if (\n    currentPageName === '/bookProject/index.html' ||\n    currentPageName === '/bookProject/project-new_skill/' ||\n    currentPageName === '/bookProject/project-new_skill/index.html'\n  ) {\n    console.log('test');\n    menuHomeEl.classList.add('current-page');\n    menuShoppingEl.classList.remove('current-page');\n    toggleElDisabled(menuShoppingEl);\n    menuHomeEl.classList.add(disabledClass);\n    return;\n  }\n\n  menuShoppingEl.classList.add('current-page');\n  menuHomeEl.classList.remove('current-page');\n  toggleElDisabled(menuHomeEl);\n  menuShoppingEl.classList.add(disabledClass);\n};\n\nsetCurrentPage();\n\nfunction toggleElDisabled(element) {\n  if (!element.classList.contains(disabledClass)) return;\n\n  element.classList.remove(disabledClass);\n}\n\n// Highlighting the name of the current page in yellow, as well as making disabled the current page 'button' (menu in the modal)\n\nconst dropMenuHomeEl = document.querySelector('.drop-menu__home');\nconst dropMenuShoppingEl = document.querySelector('.drop-menu__shopping');\n\nconst dropSetCurrentPage = () => {\n  const dropCurrentPageName = window.location.pathname;\n\n  if (\n    dropCurrentPageName === '/bookProject/index.html' ||\n    dropCurrentPageName === '/bookProject/project-new_skill/' ||\n    dropCurrentPageName === '/bookProject/project-new_skill/index.html'\n  ) {\n    dropMenuHomeEl.classList.add('current-page');\n    dropMenuShoppingEl.classList.remove('current-page');\n    toggleElDisabled(dropMenuShoppingEl);\n    dropMenuHomeEl.classList.add(disabledClass);\n    return;\n  }\n  dropMenuShoppingEl.classList.add('current-page');\n  dropMenuHomeEl.classList.remove('current-page');\n  toggleElDisabled(dropMenuHomeEl);\n  dropMenuShoppingEl.classList.add(disabledClass);\n};\n\ndropSetCurrentPage();\n","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"410VS\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","const [loaderOverlay] = document.getElementsByClassName('loader__overlay');\n\n// REMOVE LOADER >>\n\nconst removeLoader = () => {\n  loaderOverlay.classList.remove('on-loader');\n};\n\n// >>\n\n// ADD LOADER >>\n\nconst addLoader = () => {\n  loaderOverlay.classList.add('on-loader');\n};\n\n// >>\n\nexport { addLoader, removeLoader };\n","import { bodyRef } from '../header/header';\nimport icons from '../../images/icons.svg';\n\nconst refs = {\n  headerSignUp: document.querySelector('.auth__modal-open'),\n  headerSignUpMenu: document.querySelector('.sign-up-btn-js'),\n  signUp: document.querySelector('.sign-up'),\n};\n\nconst {\n  children: [singUpModal],\n} = refs.signUp;\n\nconst {\n  children: [closeBtn, form, switcher],\n} = singUpModal;\n\nconst signUpBtn = switcher.children[0];\nconst signInBtn = switcher.children[1];\n\n// CHECKED AND CREATE DATA >\n\nconst createDataForm = e => {\n  e.preventDefault();\n\n  if (form.length === 5) {\n    const [name, email, password, , submitBtn] = form;\n\n    const signUp = {};\n\n    signUp.name = name.value;\n    signUp.email = email.value;\n    signUp.password = password.value;\n\n    localStorage.setItem('signUp', JSON.stringify(signUp));\n\n    form.reset();\n\n    submitBtn.disabled = true;\n    submitBtn.style.cursor = 'auto';\n  }\n\n  if (form.length === 4) {\n    const [email, password, , submitBtn] = form;\n\n    const signIn = {};\n    signIn.email = email.value;\n    signIn.password = password.value;\n\n    localStorage.setItem('signIn', JSON.stringify(signIn));\n\n    form.reset();\n\n    submitBtn.disabled = true;\n    submitBtn.style.cursor = 'auto';\n  }\n};\n\nconst checkRequiredForm = () => {\n  if (form.length === 5) {\n    const [name, email, password, seePassword, submitBtn] = form;\n\n    if (seePassword.checked === true) {\n      password.type = 'text';\n    } else {\n      password.type = 'password';\n    }\n\n    if (!name.checkValidity()) {\n      name.style.color = 'rgba(255, 99, 71, 1)';\n    } else {\n      name.style.color = 'rgb(60, 179, 113)';\n    }\n    if (!email.checkValidity()) {\n      email.style.color = 'rgba(255, 99, 71, 1)';\n    } else {\n      email.style.color = 'rgb(60, 179, 113)';\n    }\n    if (!password.checkValidity()) {\n      password.style.color = 'rgba(255, 99, 71, 1)';\n    } else {\n      password.style.color = 'rgb(60, 179, 113)';\n    }\n\n    if (\n      name.checkValidity() &&\n      email.checkValidity() &&\n      password.checkValidity()\n    ) {\n      submitBtn.disabled = false;\n      submitBtn.style.cursor = 'pointer';\n    } else {\n      submitBtn.disabled = true;\n      submitBtn.style.cursor = 'auto';\n    }\n  }\n\n  if (form.length === 4) {\n    const [email, password, seePassword, submitBtn] = form;\n\n    if (seePassword.checked === true) {\n      password.type = 'text';\n    } else {\n      password.type = 'password';\n    }\n\n    if (!email.checkValidity()) {\n      email.style.color = 'rgba(255, 99, 71, 1)';\n    } else {\n      email.style.color = 'rgb(60, 179, 113)';\n    }\n    if (!password.checkValidity()) {\n      password.style.color = 'rgba(255, 99, 71, 1)';\n    } else {\n      password.style.color = 'rgb(60, 179, 113)';\n    }\n\n    if (email.checkValidity() && password.checkValidity()) {\n      submitBtn.disabled = false;\n      submitBtn.style.cursor = 'pointer';\n    } else {\n      submitBtn.disabled = true;\n      submitBtn.style.cursor = 'auto';\n    }\n  }\n};\n\nconst removeCheckedForm = () => {\n  form.removeEventListener('submit', createDataForm);\n  form.removeEventListener('input', checkRequiredForm);\n};\n\nconst addCheckedForm = () => {\n  form.addEventListener('submit', createDataForm);\n  form.addEventListener('input', checkRequiredForm);\n};\n\n// >\n\n// CREATE MARKUP MODAL'S WINDOW >>\n\nconst createMarkupSignIn = () => {\n  const markup = `\n  <label class=\"sign-up-email\">\n    <input\n      type=\"email\"\n      placeholder=\"email\"\n      name=\"user_email\"\n      minlength=\"2\"\n      required\n      title=\"your@mail.com\"\n      pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+[a-z]{2,4}$\"\n    />\n    <svg class=\"sign-up__email\">\n      <use href=\"${icons}#icon-email\"></use>\n    </svg>\n  </label>\n  <label class=\"sign-up-password\">\n    <input\n      type=\"password\"\n      placeholder=\"password\"\n      name=\"user_password\"\n      minlength=\"5\"\n      maxlength=\"12\"\n      required\n    />\n    <svg class=\"sign-up__lock\">\n      <use href=\"${icons}#icon-lock\"></use>\n    </svg>\n  </label>\n  <input type=\"checkbox\" id=\"see\" name=\"checked password\"/>\n  <label for=\"see\" class=\"sign-up-checkbox\" name=\"checked password\">\n    see password\n  </label>\n  <button type=\"submit\" disabled>sign up</button>\n  `;\n  form.innerHTML = markup;\n  signInBtn.classList.add('sign-up-button-active');\n  signUpBtn.classList.remove('sign-up-button-active');\n};\n\nconst createMarkupSignUp = () => {\n  const markup = `\n  <label class=\"sign-up-name\">\n    <input\n      type=\"text\"\n      placeholder=\"name\"\n      name=\"user_name\"\n      minlength=\"2\"\n      required\n      pattern=\"^[a-zA-Z]+$\"\n    />\n  </label>\n  <label class=\"sign-up-email\">\n    <input\n      type=\"email\"\n      placeholder=\"email\"\n      name=\"user_email\"\n      required\n      title=\"your@mail.com\"\n      pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n    />\n    <svg class=\"sign-up__email\">\n      <use href=\"${icons}#icon-email\"></use>\n    </svg>\n  </label>\n  <label class=\"sign-up-password\">\n    <input\n      type=\"password\"\n      placeholder=\"password\"\n      name=\"user_password\"\n      minlength=\"5\"\n      maxlength=\"12\"\n      required\n    />\n    <svg class=\"sign-up__lock\">\n      <use href=\"${icons}#icon-lock\"></use>\n    </svg>\n  </label>\n  <input type=\"checkbox\" id=\"see\" name=\"checked password\"/>\n  <label for=\"see\" class=\"sign-up-checkbox\" name=\"checked password\">\n    see password\n  </label>\n  <button type=\"submit\" disabled>sign up</button>\n  `;\n  form.innerHTML = markup;\n  signUpBtn.classList.add('sign-up-button-active');\n  signInBtn.classList.remove('sign-up-button-active');\n};\n\nsignUpBtn.addEventListener('click', createMarkupSignUp);\nsignInBtn.addEventListener('click', createMarkupSignIn);\n\ncreateMarkupSignUp();\n\n// >>\n\n//  OPEN OR CLOSED MODAL's WINDOW >>>\n\nconst closeModalSingUp = e => {\n  const closeBtnSvg = closeBtn.firstElementChild;\n  const closeBtnUse = closeBtn.firstElementChild.firstElementChild;\n\n  if (\n    e.target.className === 'sign-up sign-up-display-block-js sign-up-hidden' ||\n    e.target.className === 'sign-up__cross' ||\n    e.target === closeBtnSvg ||\n    e.target === closeBtnUse\n  ) {\n    bodyRef.classList.remove('no-scroll-body-js');\n    refs.signUp.classList.remove('sign-up-hidden');\n    removeCheckedForm();\n  }\n};\n\nconst escapeCloseModalSingUp = e => {\n  if (e.code === 'Escape') {\n    bodyRef.classList.remove('no-scroll-body-js');\n    refs.signUp.classList.remove('sign-up-hidden');\n    removeCheckedForm();\n  }\n};\n\nconst openModalSingUp = () => {\n  bodyRef.classList.add('no-scroll-body-js');\n  refs.signUp.classList.add('sign-up-hidden');\n  refs.signUp.addEventListener('click', closeModalSingUp);\n  document.addEventListener('keydown', escapeCloseModalSingUp);\n  addCheckedForm();\n};\n\nrefs.headerSignUp.addEventListener('click', openModalSingUp);\nrefs.headerSignUpMenu.addEventListener('click', openModalSingUp);\n\n// >>>\n\nsetTimeout(() => {\n  refs.signUp.classList.add('sign-up-display-block-js');\n}, 250);\n","import { fundArray } from './funds-array';\nimport Swiper from 'swiper';\n\nconst supportListEl = document.querySelector('.support__list');\nconst btnSwiperEl = document.querySelector('.swiper-button-next');\n\nconst renderSupportList = items => {\n  const listItems = items\n    .map((item, index) => {\n      const { title, url, img, img2 } = item;\n      const number = (index + 1).toString().padStart(2, '0');\n      return `\n          <li class=\"support__list-item swiper-slide\">\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer nofollow\"\n              aria-label=\"company icon\"\n              class=\"support__link\"\n              href=\"${url}\"\n            >\n              <img\n                src=\"${img}\"\n                alt=\"${title}\"\n                class=\"support__logo\"\n                srcset=\"${img} 1x, ${img2} 2x\" \n                width=\"149\"\n                height=\"32\"\n                loading=\"lazy\"\n              />\n            </a>\n            <span class=\"support__number\">${number}</span>\n          </li>\n              `;\n    })\n    .join('');\n  supportListEl.innerHTML = `${listItems}`;\n};\n\nrenderSupportList(fundArray);\n\nconst swiper = new Swiper('.swiper', {\n  direction: 'vertical',\n  spaceBetween: 19,\n  slidesPerView: 'auto',\n  rewind: true,\n  allowTouchMove: false,\n  navigation: {\n    nextEl: '.swiper-button-next',\n  },\n\n  plugins: {\n    scrollContainer: true,\n  },\n});\n\nswiper.update();\n\nbtnSwiperEl.addEventListener('click', () => {\n  swiper.slideNext();\n});\n","export const fundArray = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: require('../../images/png/support-ukraine/save-the-children.png'),\n    img2: require('../../images/png/support-ukraine/save-the-children@2x.png'),\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: require('../../images/png/support-ukraine/project-hope.png'),\n    img2: require('../../images/png/support-ukraine/project-hope@2x.png'),\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: require('../../images/png/support-ukraine/united24.png'),\n    img2: require('../../images/png/support-ukraine/united24@2x.png'),\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: require('../../images/png/support-ukraine/international-medical-corps.png'),\n    img2: require('../../images/png/support-ukraine/international-medical-corps@2x.png'),\n  },\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: require('../../images/png/support-ukraine/medecins-sans-frontieres.png'),\n    img2: require('../../images/png/support-ukraine/medecins-sans-frontieres@2x.png'),\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: require('../../images/png/support-ukraine/razom.png'),\n    img2: require('../../images/png/support-ukraine/razom@2x.png'),\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: require('../../images/png/support-ukraine/action-against-hunger.png'),\n    img2: require('../../images/png/support-ukraine/action-against-hunger@2x.png'),\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: require('../../images/png/support-ukraine/world-vision.png'),\n    img2: require('../../images/png/support-ukraine/world-vision@2x.png'),\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: require('../../images/png/support-ukraine/charity-foundation.png'),\n    img2: require('../../images/png/support-ukraine/charity-foundation@2x.png'),\n  },\n];\n","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"bYjHD\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"l32aI\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"4bNl6\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"9ycmq\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"evV2o\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"1TxhQ\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"bSMpB\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"9HxQS\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"ello4\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"bYmvG\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"ly5cG\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"iB2ax\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"4IlVE\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"hg5Bh\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"eyD5I\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"eN2CG\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"5uz0t\");","module.exports = require('./helpers/bundle-url').getBundleURL('kJAFa') + require('./helpers/bundle-manifest').resolve(\"cpz5E\");","/**\n * Swiper 9.3.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: May 15, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n    return;\n  }\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null,\n      noMousewheelClass: 'swiper-no-mousewheel'\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n\n    // Ignore event if the target or its parents have the swiper-no-mousewheel class\n    if (event.target.closest(`.${swiper.params.mousewheel.noMousewheelClass}`)) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    if (swiper.isElement) {\n      swiper.el.shadowEl.append(liveRegion);\n    } else {\n      swiper.el.append(liveRegion);\n    }\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      if (typeof newIndex === 'undefined' || Number.isNaN(newIndex)) return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  const getSpaceBetween = () => {\n    let spaceBetween = swiper.params.spaceBetween;\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n    } else if (typeof spaceBetween === 'string') {\n      spaceBetween = parseFloat(spaceBetween);\n    }\n    return spaceBetween;\n  };\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup\n    } = swiper.params;\n    const spaceBetween = getSpaceBetween();\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n  };\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const spaceBetween = getSpaceBetween();\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"kJAFa\\\":\\\"index.a14a31ef.js\\\",\\\"410VS\\\":\\\"icons.e51562f1.svg\\\",\\\"bYjHD\\\":\\\"save-the-children.68a6fe0f.png\\\",\\\"l32aI\\\":\\\"save-the-children@2x.0fdb2242.png\\\",\\\"4bNl6\\\":\\\"project-hope.8bcb37cf.png\\\",\\\"9ycmq\\\":\\\"project-hope@2x.18ea4a56.png\\\",\\\"evV2o\\\":\\\"united24.dd808d3c.png\\\",\\\"1TxhQ\\\":\\\"united24@2x.e08f0aec.png\\\",\\\"bSMpB\\\":\\\"international-medical-corps.f54244cf.png\\\",\\\"9HxQS\\\":\\\"international-medical-corps@2x.f74905cc.png\\\",\\\"ello4\\\":\\\"medecins-sans-frontieres.c4db37f3.png\\\",\\\"bYmvG\\\":\\\"medecins-sans-frontieres@2x.ed89f3c6.png\\\",\\\"ly5cG\\\":\\\"razom.5db5ecc1.png\\\",\\\"iB2ax\\\":\\\"razom@2x.fcc9c7d3.png\\\",\\\"4IlVE\\\":\\\"action-against-hunger.317dc7e1.png\\\",\\\"hg5Bh\\\":\\\"action-against-hunger@2x.b9153887.png\\\",\\\"eyD5I\\\":\\\"world-vision.7823bf96.png\\\",\\\"eN2CG\\\":\\\"world-vision@2x.aca383e2.png\\\",\\\"5uz0t\\\":\\\"charity-foundation.56bf2558.png\\\",\\\"cpz5E\\\":\\\"charity-foundation@2x.2814aba7.png\\\"}\"));"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$aqTqZ","parcelRequire","$8b1229c96e655187$export$f7b808395e6f6737","document","body","$8b1229c96e655187$var$header","querySelector","$8b1229c96e655187$var$iconMobileMenu","$8b1229c96e655187$var$darkModeLocalStored","localStorage","getItem","$8b1229c96e655187$var$darkModeId","$8b1229c96e655187$var$slider","$8b1229c96e655187$var$setLightModeStyle","classList","remove","$8b1229c96e655187$var$setDarkModeStyle","add","addEventListener","checked","setItem","error","console","message","window","e","newValue","setAttribute","removeAttribute","$8b1229c96e655187$var$modalBoxEl","$8b1229c96e655187$var$openModalBtnEl","$8b1229c96e655187$var$openModalBtnSvgEl","$8b1229c96e655187$var$signUpBtnMobile","$8b1229c96e655187$var$booksImg","$8b1229c96e655187$var$iconHrefEl","$8b1229c96e655187$var$openModalTransition","style","right","scale","$8b1229c96e655187$var$closeModalTransition","$8b1229c96e655187$var$toggleModal","contains","setTimeout","concat","$parcel$interopDefault","width","height","target","$8b1229c96e655187$var$menuHomeEl","$8b1229c96e655187$var$menuShoppingEl","$8b1229c96e655187$var$disabledClass","$8b1229c96e655187$var$toggleElDisabled","element","currentPageName","location","pathname","log","$8b1229c96e655187$var$setCurrentPage","$8b1229c96e655187$var$dropMenuHomeEl","$8b1229c96e655187$var$dropMenuShoppingEl","dropCurrentPageName","$8b1229c96e655187$var$dropSetCurrentPage","module","exports","getBundleURL","resolve","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","value","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","defineProperty","default","arr","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","obj","__esModule","Array","isArray","iter","Symbol","iterator","from","TypeError","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","test","len","arr2","instance","Constructor","$74e7f8130373505f$var$_defineProperties","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$f215c72f040a88cf$var$_arrayLikeToArray","$dedc35ecb9ca643f$var$loaderOverlay","getElementsByClassName","$dedc35ecb9ca643f$export$5303cf8b8f096deb","$dedc35ecb9ca643f$export$4d81fd392b0a6f3e","$1t1Wn","$5c0f42cc40971939$var$refs","headerSignUp","headerSignUpMenu","signUp","$5c0f42cc40971939$var$_signUp","$5c0f42cc40971939$var$singUpModal","children","$5c0f42cc40971939$var$_children1","$5c0f42cc40971939$var$closeBtn","$5c0f42cc40971939$var$form","$5c0f42cc40971939$var$switcher","$5c0f42cc40971939$var$signUpBtn","$5c0f42cc40971939$var$signInBtn","$5c0f42cc40971939$var$createDataForm","preventDefault","_form","email","password","submitBtn","JSON","stringify","reset","disabled","cursor","_form1","email1","password1","submitBtn1","signIn","$5c0f42cc40971939$var$checkRequiredForm","seePassword","type","checkValidity","color","_form2","email2","password2","seePassword1","submitBtn2","$5c0f42cc40971939$var$removeCheckedForm","removeEventListener","$5c0f42cc40971939$var$createMarkupSignUp","markup","innerHTML","$5c0f42cc40971939$var$closeModalSingUp","closeBtnSvg","firstElementChild","closeBtnUse","className","$bWgPh","bodyRef","$5c0f42cc40971939$var$escapeCloseModalSingUp","code","$5c0f42cc40971939$var$openModalSingUp","$5lb6U","items","listItems","$d10061ed1ffdee18$var$supportListEl","$d10061ed1ffdee18$var$btnSwiperEl","fundArray","map","item","index","title","img","img2","number","padStart","join","$d10061ed1ffdee18$var$swiper","$2pSj8","direction","spaceBetween","slidesPerView","rewind","allowTouchMove","navigation","nextEl","plugins","scrollContainer","update","slideNext","$3e378832c8fb0faa$export$447284bd0b7b482a","$8MBJY","$1c280aeb2839a22d$var$prototypes","eventsEmitter","$3lgo1","$42aG2","translate","$lUFJw","transition","$59lEw","slide","$itDrZ","loop","$aSak5","grabCursor","$61axM","events","$lrPYL","breakpoints","$lWyhG","checkOverflow","$h5TWE","classes","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","Swiper","_len","arguments","args","_key","_modules","el","params","ref","$1EjTE","extend","$58sFY","getDocument","querySelectorAll","swipers","forEach","containerEl","newParams","push","swiper","this","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsListeners","eventsAnyListeners","modules","$8nrFW","__modules__","apply","allModulesParams","mod","extendParams","$6gDqh","on","bind","once","off","emit","swiperParams","$959nv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","Math","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndex","filter","getAttribute","setGrabCursor","unsetGrabCursor","speed","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","_emitClasses","cls","split","indexOf","containerModifierClass","destroyed","updates","getSlideClasses","view","exact","swiperSize","size","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i1","i2","slideInView","i3","slideInView1","translated","setBreakpoint","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","setTranslate","autoHeight","updateAutoHeight","virtual","slideTo","watchOverflow","translateValue","rtlTranslate","newTranslate","newDirection","needUpdate","currentDirection","emitContainerClasses","rtl","dir","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","mount","addClasses","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","preload","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","newDefaults","m","installModule","prototypeGroup","protoMethod","use","$hoK65","$5NIfu","$1c280aeb2839a22d$export$2e2bcd8739ae039","$3bd3f193ccd5630c$var$isObject","$3bd3f193ccd5630c$export$8b58be045bf06082","src","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","activeElement","blur","nodeName","getElementById","createEvent","initEvent","childNodes","getElementsByTagName","createElementNS","importNode","hash","host","hostname","href","origin","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","$hKHmD","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","e1","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","now","$1338f5f0d60fe216$export$3735103072e4a80","getWindow","currentStyle","$1338f5f0d60fe216$export$5ec402b7fcf74398","matrix","curTransform","transformMatrix","axis","curStyle","WebKitCSSMatrix","transform","webkitTransform","a","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","$1338f5f0d60fe216$var$isNode","node","HTMLElement","nodeType","$1338f5f0d60fe216$export$8b58be045bf06082","nextSource","keysArray","noExtend","nextIndex","nextKey","desc","getOwnPropertyDescriptor","to","_loop","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","param","time","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","_classList","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$var$calcDevice","platform","ua","ios","android","screenWidth","screenHeight","ipad","ipod","iphone","windows","macos","iPadScreens","os","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","$f7ea505fdac53fb2$var$browser","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","ua1","String","includes","num","Number","major","minor","isWebView","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","param1","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","options","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","handler","priority","self","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","eventsArray","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","updateSlidesOffset","$hIP6N","updateSlidesProgress","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","updateClickedSlide","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","key1","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesSize1","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","backFaceHiddenClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","index1","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","isVisible","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","$0f7fe5860e74601f$export$2e2bcd8739ae039","activeSlide","getFilteredSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","emitSlidesClasses","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","realIndex1","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slidesPerViewDynamic","slideIndexLastInView","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","getTranslate","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","_obj","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","transitionStart","$488q8","transitionEnd","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","slideToLoop","$cGTS6","$7Y909","slidePrev","$3B7dt","slideReset","$dhKLJ","slideToClosest","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","indexAsNumber","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","prevSnapIndex","normalizedSnapGrid","prevSnap","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","nextSnap","currentSnap1","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","_slideTo","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","recalcSlides","currentSlideTranslate","newSlideTranslate","currentSlideTranslate1","newSlideTranslate1","diff1","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","pow","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","loopFixed","isLoop","evt","bubbles","dispatchEvent","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","currentPos","touchEndTime","timeDiff","pathTree","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","increment1","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","prevEl","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","getBreakpoint","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","base","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","_i","point1","value1","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","_classNames","prefix","resultClasses","suffixes","autoheight","centered","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","requireUpdateOnVirtual","overwriteParams","perspective","recreateShadows","getEffectParams","overwriteParamsResult","_s","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","allSlides","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer","register","parse"],"version":3,"file":"index.a14a31ef.js.map"}